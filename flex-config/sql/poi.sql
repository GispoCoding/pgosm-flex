COMMENT ON TABLE osm.poi_point IS 'OpenStreetMap Points of Interest (POI) (points).  pois, amenities, tourism, some man_made objects, etc. Generated by osm2pgsql Flex output using pgosm-flex/flex-config/poi.lua';
COMMENT ON TABLE osm.poi_line IS 'OpenStreetMap Points of Interest (POI) (lines).  pois, amenities, tourism, some man_made objects, etc. Generated by osm2pgsql Flex output using pgosm-flex/flex-config/poi.lua';
COMMENT ON TABLE osm.poi_polygon IS 'OpenStreetMap Points of Interest (POI) (polygons).  pois, amenities, tourism, some man_made objects, etc. Generated by osm2pgsql Flex output using pgosm-flex/flex-config/poi.lua';




ALTER TABLE osm.poi_point
    ADD CONSTRAINT pk_osm_poi_point_osm_id
    PRIMARY KEY (osm_id)
;
ALTER TABLE osm.poi_line
    ADD CONSTRAINT pk_osm_poi_line_osm_id
    PRIMARY KEY (osm_id)
;
ALTER TABLE osm.poi_polygon
    ADD CONSTRAINT pk_osm_poi_polygon_osm_id
    PRIMARY KEY (osm_id)
;


CREATE INDEX ix_osm_poi_point_type ON osm.poi_point (osm_type);
CREATE INDEX ix_osm_poi_line_type ON osm.poi_line (osm_type);
CREATE INDEX ix_osm_poi_polygon_type ON osm.poi_polygon (osm_type);


COMMENT ON COLUMN osm.poi_point.osm_id IS 'OpenStreetMap ID. Unique along with geometry type.';
COMMENT ON COLUMN osm.poi_line.osm_id IS 'OpenStreetMap ID. Unique along with geometry type.';
COMMENT ON COLUMN osm.poi_polygon.osm_id IS 'OpenStreetMap ID. Unique along with geometry type.';

COMMENT ON COLUMN osm.poi_point.name IS 'Best name option determined by helpers.get_name(). Keys with priority are: name, short_name, alt_name and loc_name.  See pgosm-flex/flex-config/helpers.lua for full logic of selection.';
COMMENT ON COLUMN osm.poi_line.name IS 'Best name option determined by helpers.get_name(). Keys with priority are: name, short_name, alt_name and loc_name.  See pgosm-flex/flex-config/helpers.lua for full logic of selection.';
COMMENT ON COLUMN osm.poi_polygon.name IS 'Best name option determined by helpers.get_name(). Keys with priority are: name, short_name, alt_name and loc_name.  See pgosm-flex/flex-config/helpers.lua for full logic of selection.';

COMMENT ON COLUMN osm.poi_point.geom IS 'Geometry loaded by osm2pgsql.';
COMMENT ON COLUMN osm.poi_line.geom IS 'Geometry loaded by osm2pgsql.';
COMMENT ON COLUMN osm.poi_polygon.geom IS 'Geometry loaded by osm2pgsql.';



ALTER TABLE osm.poi_point 
    ADD address TEXT NOT NULL
    GENERATED ALWAYS AS (
        COALESCE(housenumber, '')
            || COALESCE(' ' || street, '')
            || COALESCE(', ' || city || ' ', '')
            || COALESCE(', ' || state || ' ', '')
        )
    STORED
;


ALTER TABLE osm.poi_line
    ADD address TEXT NOT NULL
    GENERATED ALWAYS AS (
        COALESCE(housenumber, '')
            || COALESCE(' ' || street, '')
            || COALESCE(', ' || city || ' ', '')
            || COALESCE(', ' || state || ' ', '')
        )
    STORED
;

ALTER TABLE osm.poi_polygon
    ADD address TEXT NOT NULL
    GENERATED ALWAYS AS (
        COALESCE(housenumber, '')
            || COALESCE(' ' || street, '')
            || COALESCE(', ' || city || ' ', '')
            || COALESCE(', ' || state || ' ', '')
        )
    STORED
;


COMMENT ON COLUMN osm.poi_point.address IS 'Simple attempt to combine address parts into single column with COALESCE.';
COMMENT ON COLUMN osm.poi_line.address IS 'Simple attempt to combine address parts into single column with COALESCE.';
COMMENT ON COLUMN osm.poi_polygon.address IS 'Simple attempt to combine address parts into single column with COALESCE.';


CREATE MATERIALIZED VIEW osm.vpoi_all AS
SELECT osm_id, 'N' AS geom_type, osm_type, osm_subtype, name, address, operator, geom
    FROM osm.poi_point
UNION
SELECT osm_id, 'L' AS geom_type, osm_type, osm_subtype, name, address, operator,
        ST_Centroid(geom) AS geom
    FROM osm.poi_line
UNION
SELECT osm_id, 'W' AS geom_type, osm_type, osm_subtype, name, address, operator,
        ST_Centroid(geom) AS geom
    FROM osm.poi_polygon
;


CREATE UNIQUE INDEX uix_osm_vpoi_all_osm_id_geom_type
    ON osm.vpoi_all (osm_id, geom_type);
CREATE INDEX gix_osm_vpoi_all
    ON osm.vpoi_all USING GIST (geom);

CREATE INDEX ix_osm_vpoi_all_osm_type ON osm.vpoi_all (osm_type);



COMMENT ON MATERIALIZED VIEW osm.vpoi_all IS 'Cobmined POI view. Converts lines and polygons to point with ST_Centroid(), stacks using UNION';
COMMENT ON COLUMN osm.vpoi_all.address IS 'Simple attempt to combine address parts into single column with COALESCE. See base tables for individual address parts';

COMMENT ON COLUMN osm.vpoi_all.geom_type IS 'Indicates source table, N (point) L (line) W (polygon).  Using L for line differs from how osm2pgsql classifies lines ("W") in order to provide a direct link to which table the data comes from.';
